package tmm.bngram.topicDetector;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import org.apache.lucene.analysis.Token;
import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;

class TweetTokenizerImpl
{
  public static final int YYEOF = -1;
  private static final int ZZ_BUFFERSIZE = 16384;
  public static final int YYINITIAL = 0;
  private static final int[] ZZ_LEXSTATE = { 0, 0 };
  private static final String ZZ_CMAP_PACKED = "\t\000\001\000\001!\001\000\001\000\001 \022\000\001\000\001\023\001\000\001\026\001\023\001\022\001\005\001\003\004\023\001\035\001\007\001\004\001\025\001\013\001\013\001\f\002\r\001\016\004\n\001\020\001\021\001\000\001\021\001\000\001\024\001\006\006\017\001\t\001\031\007\t\001\033\002\t\001\034\001\032\006\t\001\027\001\000\001\030\001\000\001\b\001\000\006\017\001\t\001\031\007\t\001\033\002\t\001\034\001\032\006\t\003\000\001\021+\000\001\036\n\000\001\036\004\000\001\036\005\000\027\036\001\000\037\036\001\000Ŀ\036\031\000r\036\004\000\f\036\016\000\005\036\t\000\001\036\000\001\036\013\000\001\036\001\000\003\036\001\000\001\036\001\000\024\036\001\000,\036\001\000&\036\001\000\005\036\004\000\036\b\000E\036\001\000&\036\002\000\002\036\006\000\020\036!\000&\036\002\000\001\036\007\000'\036H\000\033\036\005\000\003\036.\000\032\036\005\000\013\036\025\000\n\002\004\000\002\036\001\000c\036\001\000\001\036\017\000\002\036\007\000\002\036\n\002\003\036\002\000\001\036\020\000\001\036\001\000\036\036\035\000\003\0360\000&\036\013\000\001\036Œ\0006\036\003\000\001\036\022\000\001\036\007\000\n\036\004\000\n\002\025\000\b\036\002\000\002\036\002\000\026\036\001\000\007\036\001\000\001\036\003\000\004\036\003\000\001\036\036\000\002\036\001\000\003\036\004\000\n\002\002\036\023\000\006\036\004\000\002\036\002\000\026\036\001\000\007\036\001\000\002\036\001\000\002\036\001\000\002\036\037\000\004\036\001\000\001\036\007\000\n\002\002\000\003\036\020\000\t\036\001\000\003\036\001\000\026\036\001\000\007\036\001\000\002\036\001\000\005\036\003\000\001\036\022\000\001\036\017\000\002\036\004\000\n\002\025\000\b\036\002\000\002\036\002\000\026\036\001\000\007\036\001\000\002\036\001\000\005\036\003\000\001\036\036\000\002\036\001\000\003\036\004\000\n\002\001\000\001\036\021\000\001\036\001\000\006\036\003\000\003\036\001\000\004\036\003\000\002\036\001\000\001\036\001\000\002\036\003\000\002\036\003\000\003\036\003\000\b\036\001\000\003\036-\000\t\002\025\000\b\036\001\000\003\036\001\000\027\036\001\000\n\036\001\000\005\036&\000\002\036\004\000\n\002\025\000\b\036\001\000\003\036\001\000\027\036\001\000\n\036\001\000\005\036\003\000\001\036 \000\001\036\001\000\002\036\004\000\n\002\025\000\b\036\001\000\003\036\001\000\027\036\001\000\020\036&\000\002\036\004\000\n\002\025\000\022\036\003\000\030\036\001\000\t\036\001\000\001\036\002\000\007\0369\000\001\0010\036\001\001\002\036\f\001\007\036\t\001\n\002'\000\002\036\001\000\001\036\002\000\002\036\001\000\001\036\002\000\001\036\006\000\004\036\001\000\007\036\001\000\003\036\001\000\001\036\001\000\001\036\002\000\002\036\001\000\004\036\001\000\002\036\t\000\001\036\002\000\005\036\001\000\001\036\t\000\n\002\002\000\002\036\"\000\001\036\037\000\n\002\026\000\b\036\001\000\"\036\035\000\004\036t\000\"\036\001\000\005\036\001\000\002\036\025\000\n\002\006\000\006\036J\000&\036\n\000)\036\007\000Z\036\005\000D\036\005\000R\036\006\000\007\036\001\000?\036\001\000\001\036\001\000\004\036\002\000\007\036\001\000\001\036\001\000\004\036\002\000'\036\001\000\001\036\001\000\004\036\002\000\037\036\001\000\001\036\001\000\004\036\002\000\007\036\001\000\001\036\001\000\004\036\002\000\007\036\001\000\007\036\001\000\027\036\001\000\037\036\001\000\001\036\001\000\004\036\002\000\007\036\001\000'\036\001\000\023\036\016\000\t\002.\000U\036\f\000ɬ\036\002\000\b\036\n\000\032\036\005\000K\036\025\000\r\036\001\000\004\036\016\000\022\036\016\000\022\036\016\000\r\036\001\000\003\036\017\0004\036#\000\001\036\004\000\001\036\003\000\n\002&\000\n\002\006\000X\036\b\000)\036W\000\035\036)\000\n\002\036\036\002\000\005\036΋\000l\036\000\036\004\000Z\036\006\000\026\036\002\000\006\036\002\000&\036\002\000\006\036\002\000\b\036\001\000\001\036\001\000\001\036\001\000\001\036\001\000\037\036\002\0005\036\001\000\007\036\001\000\001\036\003\000\003\036\001\000\007\036\003\000\004\036\002\000\006\036\004\000\r\036\005\000\003\036\001\000\007\036t\000\001\036\r\000\001\036\000\001\036\004\000\001\036\002\000\n\036\001\000\001\036\003\000\005\036\006\000\001\036\001\000\001\036\001\000\001\036\001\000\004\036\001\000\003\036\001\000\007\036\003\000\003\036\005\000\005\036ົ\000\002\036*\000\005\036\005\000\002\036\003\000\001\037V\037\006\037\003\037\001\037Z\037\001\037\004\037\005\037(\037\003\037\001\000^\036\021\000\030\0368\000\020\037Ā\000\037\000ᦶ\037\n\037@\000冦\037Z\037ҍ\036ݳ\000⮤\036⅜\000Į\037\002\037;\037\037\007\036\f\000\005\036\005\000\001\036\001\000\n\036\001\000\r\036\001\000\005\036\001\000\001\036\001\000\002\036\001\000\002\036\001\000l\036!\000ū\036\022\000@\036\002\0006\036(\000\f\036t\000\005\036\001\000\036\023\000\n\002\007\000\032\036\006\000\032\036\n\000\001\037:\037\037\036\003\000\006\036\002\000\006\036\002\000\006\036\002\000\003\036#\000";
  private static final char[] ZZ_CMAP = zzUnpackCMap("\t\000\001\000\001!\001\000\001\000\001 \022\000\001\000\001\023\001\000\001\026\001\023\001\022\001\005\001\003\004\023\001\035\001\007\001\004\001\025\001\013\001\013\001\f\002\r\001\016\004\n\001\020\001\021\001\000\001\021\001\000\001\024\001\006\006\017\001\t\001\031\007\t\001\033\002\t\001\034\001\032\006\t\001\027\001\000\001\030\001\000\001\b\001\000\006\017\001\t\001\031\007\t\001\033\002\t\001\034\001\032\006\t\003\000\001\021+\000\001\036\n\000\001\036\004\000\001\036\005\000\027\036\001\000\037\036\001\000Ŀ\036\031\000r\036\004\000\f\036\016\000\005\036\t\000\001\036\000\001\036\013\000\001\036\001\000\003\036\001\000\001\036\001\000\024\036\001\000,\036\001\000&\036\001\000\005\036\004\000\036\b\000E\036\001\000&\036\002\000\002\036\006\000\020\036!\000&\036\002\000\001\036\007\000'\036H\000\033\036\005\000\003\036.\000\032\036\005\000\013\036\025\000\n\002\004\000\002\036\001\000c\036\001\000\001\036\017\000\002\036\007\000\002\036\n\002\003\036\002\000\001\036\020\000\001\036\001\000\036\036\035\000\003\0360\000&\036\013\000\001\036Œ\0006\036\003\000\001\036\022\000\001\036\007\000\n\036\004\000\n\002\025\000\b\036\002\000\002\036\002\000\026\036\001\000\007\036\001\000\001\036\003\000\004\036\003\000\001\036\036\000\002\036\001\000\003\036\004\000\n\002\002\036\023\000\006\036\004\000\002\036\002\000\026\036\001\000\007\036\001\000\002\036\001\000\002\036\001\000\002\036\037\000\004\036\001\000\001\036\007\000\n\002\002\000\003\036\020\000\t\036\001\000\003\036\001\000\026\036\001\000\007\036\001\000\002\036\001\000\005\036\003\000\001\036\022\000\001\036\017\000\002\036\004\000\n\002\025\000\b\036\002\000\002\036\002\000\026\036\001\000\007\036\001\000\002\036\001\000\005\036\003\000\001\036\036\000\002\036\001\000\003\036\004\000\n\002\001\000\001\036\021\000\001\036\001\000\006\036\003\000\003\036\001\000\004\036\003\000\002\036\001\000\001\036\001\000\002\036\003\000\002\036\003\000\003\036\003\000\b\036\001\000\003\036-\000\t\002\025\000\b\036\001\000\003\036\001\000\027\036\001\000\n\036\001\000\005\036&\000\002\036\004\000\n\002\025\000\b\036\001\000\003\036\001\000\027\036\001\000\n\036\001\000\005\036\003\000\001\036 \000\001\036\001\000\002\036\004\000\n\002\025\000\b\036\001\000\003\036\001\000\027\036\001\000\020\036&\000\002\036\004\000\n\002\025\000\022\036\003\000\030\036\001\000\t\036\001\000\001\036\002\000\007\0369\000\001\0010\036\001\001\002\036\f\001\007\036\t\001\n\002'\000\002\036\001\000\001\036\002\000\002\036\001\000\001\036\002\000\001\036\006\000\004\036\001\000\007\036\001\000\003\036\001\000\001\036\001\000\001\036\002\000\002\036\001\000\004\036\001\000\002\036\t\000\001\036\002\000\005\036\001\000\001\036\t\000\n\002\002\000\002\036\"\000\001\036\037\000\n\002\026\000\b\036\001\000\"\036\035\000\004\036t\000\"\036\001\000\005\036\001\000\002\036\025\000\n\002\006\000\006\036J\000&\036\n\000)\036\007\000Z\036\005\000D\036\005\000R\036\006\000\007\036\001\000?\036\001\000\001\036\001\000\004\036\002\000\007\036\001\000\001\036\001\000\004\036\002\000'\036\001\000\001\036\001\000\004\036\002\000\037\036\001\000\001\036\001\000\004\036\002\000\007\036\001\000\001\036\001\000\004\036\002\000\007\036\001\000\007\036\001\000\027\036\001\000\037\036\001\000\001\036\001\000\004\036\002\000\007\036\001\000'\036\001\000\023\036\016\000\t\002.\000U\036\f\000ɬ\036\002\000\b\036\n\000\032\036\005\000K\036\025\000\r\036\001\000\004\036\016\000\022\036\016\000\022\036\016\000\r\036\001\000\003\036\017\0004\036#\000\001\036\004\000\001\036\003\000\n\002&\000\n\002\006\000X\036\b\000)\036W\000\035\036)\000\n\002\036\036\002\000\005\036΋\000l\036\000\036\004\000Z\036\006\000\026\036\002\000\006\036\002\000&\036\002\000\006\036\002\000\b\036\001\000\001\036\001\000\001\036\001\000\001\036\001\000\037\036\002\0005\036\001\000\007\036\001\000\001\036\003\000\003\036\001\000\007\036\003\000\004\036\002\000\006\036\004\000\r\036\005\000\003\036\001\000\007\036t\000\001\036\r\000\001\036\000\001\036\004\000\001\036\002\000\n\036\001\000\001\036\003\000\005\036\006\000\001\036\001\000\001\036\001\000\001\036\001\000\004\036\001\000\003\036\001\000\007\036\003\000\003\036\005\000\005\036ົ\000\002\036*\000\005\036\005\000\002\036\003\000\001\037V\037\006\037\003\037\001\037Z\037\001\037\004\037\005\037(\037\003\037\001\000^\036\021\000\030\0368\000\020\037Ā\000\037\000ᦶ\037\n\037@\000冦\037Z\037ҍ\036ݳ\000⮤\036⅜\000Į\037\002\037;\037\037\007\036\f\000\005\036\005\000\001\036\001\000\n\036\001\000\r\036\001\000\005\036\001\000\001\036\001\000\002\036\001\000\002\036\001\000l\036!\000ū\036\022\000@\036\002\0006\036(\000\f\036t\000\005\036\001\000\036\023\000\n\002\007\000\032\036\006\000\032\036\n\000\001\037:\037\037\036\003\000\006\036\002\000\006\036\002\000\006\036\002\000\003\036#\000");
  private static final int[] ZZ_ACTION = zzUnpackAction();
  private static final String ZZ_ACTION_PACKED_0 = "\001\000\001\001\002\002\001\001\001\002\001\001\001\002\001\003\001\001\004\000\001\002\002\000\001\002\001\004\001\000\001\005\004\000\001\002\001\006\001\002\003\007\002\000\001\b\001\000\001\b\001\002\003\007\003\b\001\000\003\b\001\t\001\007\002\n\001\002\001\013\001\000\001\013\003\000\002\013\001\007\001\f\001\002\001\r\001\007\001\000\001\002\004\000\001\016\003\000\001\016\003\000\003\016\007\000\001\016\007\000\002\016\n\000\003\016\r\000\002\016\r\000\002\016\r\000\001\016\\\000";
  
  private static int[] zzUnpackAction()
  {
    int[] result = new int['ø'];
    int offset = 0;
    offset = zzUnpackAction("\001\000\001\001\002\002\001\001\001\002\001\001\001\002\001\003\001\001\004\000\001\002\002\000\001\002\001\004\001\000\001\005\004\000\001\002\001\006\001\002\003\007\002\000\001\b\001\000\001\b\001\002\003\007\003\b\001\000\003\b\001\t\001\007\002\n\001\002\001\013\001\000\001\013\003\000\002\013\001\007\001\f\001\002\001\r\001\007\001\000\001\002\004\000\001\016\003\000\001\016\003\000\003\016\007\000\001\016\007\000\002\016\n\000\003\016\r\000\002\016\r\000\002\016\r\000\001\016\\\000", offset, result);
    return result;
  }
  
  private static int zzUnpackAction(String packed, int offset, int[] result)
  {
    int i = 0;
    int j = offset;
    int l = packed.length();
    int count;
    for (; i < l; count > 0)
    {
      count = packed.charAt(i++);
      int value = packed.charAt(i++);
      result[(j++)] = value;count--;
    }
    return j;
  }
  
  private static final int[] ZZ_ROWMAP = zzUnpackRowMap();
  private static final String ZZ_ROWMAP_PACKED_0 = "\000\000\000\"\000D\000f\000\000ª\000Ì\000î\000\"\000Đ\000Ĳ\000Ŕ\000Ŷ\000Ƙ\000ƺ\000ǜ\000Ǿ\000Ƞ\000\"\000ɂ\000\000ɤ\000ʆ\000ʨ\000ˊ\000ˬ\000Ì\000̎\000̰\000͒\000ʹ\000Ζ\000θ\000Ϛ\000ϼ\000О\000р\000Ѣ\000҄\000Ҧ\000ӈ\000Ӫ\000Ԍ\000Ԯ\000Ր\000ղ\000֔\000ֶ\000ט\000ʨ\000׺\000؜\000ؾ\000٠\000ڂ\000ڤ\000ۆ\000ۨ\000Ĳ\000Ԯ\000܊\000ܬ\000ݎ\000ݰ\000ޒ\000޴\000ߖ\000߸\000ࠚ\000࠼\000࡞\000ࢀ\000ࢢ\000ࣄ\000ࣦ\000ई\000प\000ौ\000८\000ঐ\000ল\000৔\000৶\000ਘ\000਺\000ੜ\000੾\000ઠ\000ૂ\000૤\000ଆ\000ନ\000୊\000୬\000எ\000ர\000௒\000௴\000ఖ\000స\000ౚ\000౼\000ಞ\000ೀ\000ೢ\000ഄ\000ദ\000ൈ\000൪\000ඌ\000ථ\000ැ\000ෲ\000ด\000ึ\000๘\000๺\000ຜ\000຾\000໠\000༂\000༤\000ཆ\000ཨ\000ྊ\000ྫྷ\000࿎\000࿰\000ဒ\000ဴ\000ၖ\000ၸ\000ႚ\000Ⴜ\000პ\000ᄀ\000ᄢ\000ᅄ\000ᅦ\000ᆈ\000ᆪ\000ᇌ\000ᇮ\000ሐ\000ሲ\000ቔ\000ቶ\000ኘ\000ኺ\000ዜ\000ዾ\000ጠ\000ፂ\000፤\000ᎆ\000Ꭸ\000Ꮚ\000Ꮼ\000ᐎ\000ᐰ\000ᑒ\000ᑴ\000ᒖ\000ᒸ\000ᓚ\000ᓼ\000ᔞ\000ᕀ\000ᕢ\000ᖄ\000ᖦ\000ᗈ\000ᗪ\000ᘌ\000ᘮ\000ᙐ\000ᙲ\000ᚔ\000ᚶ\000ᛘ\000᛺\000᜜\000᜾\000ᝠ\000គ\000ឤ\000ំ\000៨\000᠊\000ᠬ\000ᡎ\000ᡰ\000ᢒ\000ᢴ\000ᣖ\000᣸\000ᤚ\000᤼\000ᥞ\000ᦀ\000ᦢ\000ᧄ\000᧦\000ᨈ\000ᨪ\000ᩌ\000ᩮ\000᪐\000᪲\000᫔\000᫶\000ᬘ\000ᬺ\000᭜\000᭾\000ᮠ\000ᯂ\000ᯤ\000ᰆ\000ᰨ\000᱊\000ᱬ\000᲎\000Ჰ\000᳒\000᳴\000ᴖ\000ᴸ\000ᵚ\000ᵼ\000ᶞ\000᷀\000ᷢ\000Ḅ\000Ḧ\000Ṉ\000Ṫ\000Ẍ\000Ắ\000Ố\000Ỳ\000ἔ\000ἶ\000὘\000ὺ\000ᾜ\000ι\000ῠ";
  
  private static int[] zzUnpackRowMap()
  {
    int[] result = new int['ø'];
    int offset = 0;
    offset = zzUnpackRowMap("\000\000\000\"\000D\000f\000\000ª\000Ì\000î\000\"\000Đ\000Ĳ\000Ŕ\000Ŷ\000Ƙ\000ƺ\000ǜ\000Ǿ\000Ƞ\000\"\000ɂ\000\000ɤ\000ʆ\000ʨ\000ˊ\000ˬ\000Ì\000̎\000̰\000͒\000ʹ\000Ζ\000θ\000Ϛ\000ϼ\000О\000р\000Ѣ\000҄\000Ҧ\000ӈ\000Ӫ\000Ԍ\000Ԯ\000Ր\000ղ\000֔\000ֶ\000ט\000ʨ\000׺\000؜\000ؾ\000٠\000ڂ\000ڤ\000ۆ\000ۨ\000Ĳ\000Ԯ\000܊\000ܬ\000ݎ\000ݰ\000ޒ\000޴\000ߖ\000߸\000ࠚ\000࠼\000࡞\000ࢀ\000ࢢ\000ࣄ\000ࣦ\000ई\000प\000ौ\000८\000ঐ\000ল\000৔\000৶\000ਘ\000਺\000ੜ\000੾\000ઠ\000ૂ\000૤\000ଆ\000ନ\000୊\000୬\000எ\000ர\000௒\000௴\000ఖ\000స\000ౚ\000౼\000ಞ\000ೀ\000ೢ\000ഄ\000ദ\000ൈ\000൪\000ඌ\000ථ\000ැ\000ෲ\000ด\000ึ\000๘\000๺\000ຜ\000຾\000໠\000༂\000༤\000ཆ\000ཨ\000ྊ\000ྫྷ\000࿎\000࿰\000ဒ\000ဴ\000ၖ\000ၸ\000ႚ\000Ⴜ\000პ\000ᄀ\000ᄢ\000ᅄ\000ᅦ\000ᆈ\000ᆪ\000ᇌ\000ᇮ\000ሐ\000ሲ\000ቔ\000ቶ\000ኘ\000ኺ\000ዜ\000ዾ\000ጠ\000ፂ\000፤\000ᎆ\000Ꭸ\000Ꮚ\000Ꮼ\000ᐎ\000ᐰ\000ᑒ\000ᑴ\000ᒖ\000ᒸ\000ᓚ\000ᓼ\000ᔞ\000ᕀ\000ᕢ\000ᖄ\000ᖦ\000ᗈ\000ᗪ\000ᘌ\000ᘮ\000ᙐ\000ᙲ\000ᚔ\000ᚶ\000ᛘ\000᛺\000᜜\000᜾\000ᝠ\000គ\000ឤ\000ំ\000៨\000᠊\000ᠬ\000ᡎ\000ᡰ\000ᢒ\000ᢴ\000ᣖ\000᣸\000ᤚ\000᤼\000ᥞ\000ᦀ\000ᦢ\000ᧄ\000᧦\000ᨈ\000ᨪ\000ᩌ\000ᩮ\000᪐\000᪲\000᫔\000᫶\000ᬘ\000ᬺ\000᭜\000᭾\000ᮠ\000ᯂ\000ᯤ\000ᰆ\000ᰨ\000᱊\000ᱬ\000᲎\000Ჰ\000᳒\000᳴\000ᴖ\000ᴸ\000ᵚ\000ᵼ\000ᶞ\000᷀\000ᷢ\000Ḅ\000Ḧ\000Ṉ\000Ṫ\000Ẍ\000Ắ\000Ố\000Ỳ\000ἔ\000ἶ\000὘\000ὺ\000ᾜ\000ι\000ῠ", offset, result);
    return result;
  }
  
  private static int zzUnpackRowMap(String packed, int offset, int[] result)
  {
    int i = 0;
    int j = offset;
    int l = packed.length();
    while (i < l)
    {
      int high = packed.charAt(i++) << '\020';
      result[(j++)] = (high | packed.charAt(i++));
    }
    return j;
  }
  
  private static final int[] ZZ_TRANS = zzUnpackTrans();
  private static final String ZZ_TRANS_PACKED_0 = "\001\002\001\003\001\004\003\002\001\005\002\002\001\006\005\004\001\006\006\002\001\007\002\002\001\b\003\006\001\002\001\006\001\t\001\n\001\002#\000\002\003\001\000\001\013\001\000\001\f\002\r\007\003\005\000\001\016\003\000\004\003\001\016\001\003\004\000\001\003\001\017\001\000\001\020\001\000\001\f\002\021\001\022\005\017\001\022\002\000\001\023\002\000\001\024\003\000\004\022\001\024\001\022\005\000\001\025\005\000\b\025\t\000\004\025\001\000\001\025\004\000\001\003\001\022\001\026\001\027\001\030\001\031\002\r\001\032\005\022\001\032\005\000\001\016\003\000\004\032\001\016\001\032\005\000\001\033\005\000\b\033\t\000\004\033\001\000\001\033\004\000\001\003\001\022\001\026\001\027\001\030\001\031\002\r\001\032\005\022\001\032\005\000\001\016\003\000\001\032\001\034\002\032\001\016\001\032$\000\001\002\001\000\001\035\001\036\006\000\001\037\005\036\001\037\t\000\004\037\001\000\001\037\004\000\002 \006\000\007 \t\000\004 \001\000\001 \004\000\001!\001\"\006\000\001#\005\"\001#\t\000\004#\001\000\001#\005\000\001$\006\000\001\016\005$\001\016\t\000\004\016\001\000\001\016\004\000\001\003\001%\001\000\001\020\001\000\001\f\002\021\001\022\005%\001\022\002\000\001\023\002\000\001\024\003\000\004\022\001\024\001\022\004\000\001&\001'\006\000\001(\005'\001(\t\000\004(\001\000\001(\004\000\001)\001*\006\000\001+\005*\001+\t\000\004+\001\000\001+\004\000\001\003\001\022\001\000\001,\001\000\001\f\002\021\007\022\005\000\001\024\003\000\004\022\001\024\001\022\004\000\001-\001.\006\000\001/\005.\001/\t\000\004/\001\000\001/\f\000\0010\005\000\0010\t\000\0040\001\000\0010\004\000\001\035\001\036\006\000\0011\005\036\0011\t\000\0041\001\000\0011\f\000\0012\005\000\0012\t\000\0042\001\000\0012\004\000\002 \006\000\0013\005 \0013\t\000\0043\001\000\0013\004\000\001\003\001\022\001\026\001\013\001\030\001\031\002\r\001\032\005\022\001\032\005\000\001\016\003\000\004\032\001\016\001\032\004\000\001\003\001\022\001\026\001\013\001\030\001\031\002\r\001\032\005\022\001\032\005\000\001\016\003\000\001\032\0014\002\032\001\016\001\032\004\000\002\035\001\000\0015\001\000\001\f\0026\007\035\t\000\004\035\001\000\001\035\004\000\001\035\001\036\001\000\0017\001\000\001\f\0028\007\036\005\000\0019\003\000\004\036\0019\001\036\004\000\001\035\001\036\001\000\0015\001\000\001\f\0026\001\037\005\036\001\037\t\000\004\037\001\000\001\037\004\000\002 \001\000\001:\002\000\001:\001\000\007 \t\000\004 \001\000\001 \004\000\002!\001\000\0016\001\000\001\f\0026\007!\t\000\004!\001\000\001!\004\000\001!\001\"\001\000\0018\001\000\001\f\0028\007\"\005\000\0019\003\000\004\"\0019\001\"\004\000\001!\001\"\001\000\0016\001\000\001\f\0026\001#\005\"\001#\t\000\004#\001\000\001#\005\000\001$\001\000\0019\002\000\0029\007$\005\000\0019\003\000\004$\0019\001$\004\000\001\003\001\022\001\000\001\020\001\000\001\f\002\021\007\022\002\000\001\023\002\000\001\024\003\000\004\022\001\024\001\022\004\000\002&\001\000\001;\001\000\001\f\002\r\007&\005\000\001\016\003\000\004&\001\016\001&\004\000\001&\001'\001\000\001<\001\000\001\f\002\021\001=\005'\001=\002\000\001\023\002\000\001\024\003\000\004=\001\024\001=\004\000\001&\001=\001\000\001;\001\000\001\f\002\r\001(\005=\001(\005\000\001\016\003\000\004(\001\016\001(\004\000\002)\001\000\001\r\001\000\001\f\002\r\007)\005\000\001\016\003\000\004)\001\016\001)\004\000\001)\001*\001\000\001\021\001\000\001\f\002\021\007*\005\000\001\024\003\000\004*\001\024\001*\004\000\001)\001*\001\000\001\r\001\000\001\f\002\r\001+\005*\001+\005\000\001\016\003\000\004+\001\016\001+\004\000\001&\001=\006\000\001(\005=\001(\t\000\004(\001\000\001(\004\000\002-\001\000\001\016\002\000\002\016\007-\005\000\001\016\003\000\004-\001\016\001-\004\000\001-\001.\001\000\001\024\002\000\002\024\007.\005\000\001\024\003\000\004.\001\024\001.\004\000\001-\001.\001\000\001\016\002\000\002\016\001/\005.\001/\005\000\001\016\003\000\004/\001\016\001/\006\000\001\026\005\000\0010\005\000\0010\t\000\0040\001\000\0010\004\000\001\035\001\036\001\000\001>\001\000\001\f\0026\001\037\005\036\001\037\t\000\004\037\001\000\001\037\004\000\002 \001\000\001:\002\000\001:\001\000\0013\005 \0013\t\000\0043\001\000\0013\004\000\001\003\001\022\001\026\001\013\001\030\001\031\002\r\001\032\005\022\001\032\005\000\001\016\003\000\002\032\001?\001\032\001\016\001\032\004\000\002\035\006\000\007\035\t\000\004\035\001\000\001\035\004\000\002!\006\000\007!\t\000\004!\001\000\001!\004\000\002&\006\000\007&\t\000\004&\001\000\001&\004\000\002)\006\000\007)\t\000\004)\001\000\001)\004\000\002-\006\000\007-\t\000\004-\001\000\001-\004\000\002@\006\000\007@\t\000\004@\001\000\001@\004\000\001&\001=\001\000\001<\001\000\001\f\002\021\007=\005\000\001\024\003\000\004=\001\024\001=\004\000\002\035\006\000\001A\005\035\001A\t\000\004A\001\000\001A\004\000\001\003\001\022\001\026\001\013\001\030\001\031\002\r\001\032\005\022\001\032\001B\004\000\001\016\003\000\003\032\001C\001\016\001\032\004\000\002@\001\000\001:\002\000\001:\001\000\007@\t\000\004@\001\000\001@\004\000\002\035\001\000\001>\001\000\001\f\0026\007\035\t\000\004\035\001\000\001\035\030\000\001D\r\000\001\003\001\022\001\026\001\013\001\030\001\031\002\r\001\032\005\022\001\032\001B\004\000\001\016\003\000\004\032\001\016\001\032\030\000\001E\017\000\003F\001G\002F\007H\001I\001F\001J\001F\003\000\001K\001\000\004H\001F\007\000\003F\001G\tF\001I\001F\001J\001F\005\000\005F\r\000\007L\007\000\001K\001\000\004L\b\000\001F\001M\001F\001G\001N\001F\007H\001O\001F\001J\001F\001P\001Q\001R\002\000\004H\001F\007\000\003I\001G\tI\001\000\001I\001S\001I\005\000\005I\016\000\006T\034\000\006U\001V\025\000\001W\002\000\001X\001\000\007L\001Y\003\000\001P\001Q\001R\002\000\004L\b\000\003F\001G\002F\007H\001I\001F\001J\001F\005\000\004H\001F\007\000\003F\001G\001N\001F\007H\001I\001F\001J\001F\005\000\004H\001F\007\000\003I\001G\003I\005Z\001I\001\000\001I\001S\001I\005\000\005I\007\000\017P\001[\003P\001R\002\000\005P\b\000\016Q\001\\\001\000\001P\001Q\001R\002\000\004Q\b\000\017R\001]\003R\003\000\005R\016\000\006^\034\000\006F\034\000\006_\001`!\000\001a\032\000\007L\t\000\004L\f\000\001X\001\000\007L\t\000\004L\017\000\005b\026\000\003I\001G\003I\005c\001I\001\000\001I\001S\001I\001P\001Q\001R\002\000\005I\016\000\006d\034\000\006e\034\000\006f\034\000\006I\034\000\006g\001`\033\000\006h\001i\033\000\001j\001k\001l\002j\001m\b\000\001n\023\000\005o\005\000\001P\001Q\001R\016\000\003I\001G\003I\005p\001I\001\000\001I\001S\001I\001P\001Q\001R\002\000\005I\016\000\006P\034\000\006Q\034\000\006R\034\000\006q\001`\033\000\006r\001s\033\000\001t\001u\001v\002t\001w\b\000\001n\r\000\001x\005\000\005y\001z\001{\007\000\001n\r\000\001x\005\000\005|\001z\001{\007\000\001n\r\000\001x\005\000\001y\003|\001}\001z\001{\007\000\001n\023\000\006z\001{\007\000\001n\031\000\001Y\003\000\001P\001Q\001R\025\000\005~\005\000\001P\001Q\001R\016\000\003I\001G\003I\005\001I\001\000\001I\001S\001I\001P\001Q\001R\002\000\005I\024\000\001`\033\000\006\001s\033\000\006\001\025\000\001x\005\000\005\001\001\007\000\001n\r\000\001x\005\000\005\001\001\007\000\001n\r\000\001x\005\000\001\003\001\001\001\007\000\001n\023\000\006\001\007\000\001n\023\000\001\001\001\002\027\000\001x\005\000\006\001{\007\000\001n\023\000\006\001{\007\000\001n\023\000\001t\001u\001v\002t\001w\026\000\001x\005\000\005\001\001{\007\000\001n\r\000\001x\005\000\001\004\001\001{\007\000\001n\023\000\005\005\000\001P\001Q\001R\016\000\003I\001G\003I\005\001I\001\000\001I\001S\001I\001P\001Q\001R\002\000\005I\016\000\006\001s\033\000\006\001\033\000\001\001\001\002\001\b\000\001n\r\000\001x\005\000\006\001\007\000\001n\023\000\006\001\007\000\001n\023\000\001\001\001\002\001\026\000\001x\005\000\005\001\001\007\000\001n\r\000\001x\005\000\001\004\001\001\007\000\001n\r\000\001\005\000\005\027\000\001\005\000\005\027\000\001\005\000\001\003\001\035\000\006\001{\007\000\001n\r\000\001x\005\000\006\001{\007\000\001n\023\000\005\005\000\001P\001Q\001R\016\000\003I\001G\tI\001\000\001I\001S\001I\001P\001Q\001R\002\000\005I\024\000\001s\033\000\006\001\033\000\006\001\025\000\001x\005\000\005 \001¡\001¢\007\000\001n\r\000\001x\005\000\005£\001¡\001¢\007\000\001n\r\000\001x\005\000\001 \003£\001¤\001¡\001¢\007\000\001n\023\000\006¡\001¢\007\000\001n\023\000\006¥\001\007\000\001n\r\000\001x\005\000\006¥\001\007\000\001n\023\000\001¦\001§\001¨\002¦\027\000\001!\000\001\006\000\004#\000\001{\007\000\001n\035\000\001P\001Q\001R\025\000\006©\001\033\000\006ª\001«\033\000\001¬\001­\001®\002¬\001¯\b\000\001n\r\000\001x\005\000\006°\001¢\007\000\001n\023\000\006°\001¢\007\000\001n\023\000\001¬\001­\001®\002¬\001¯\026\000\001x\005\000\005±\001°\001¢\007\000\001n\r\000\001x\005\000\001°\004±\001°\001¢\007\000\001n\031\000\001\007\000\001n\r\000\001²\005\000\005³\027\000\001²\005\000\005¦\027\000\001²\005\000\001³\003¦\001´#\000\001\033\000\006µ\001«\033\000\006¶\001·\025\000\001x\005\000\005¸\001¹\001º\007\000\001n\r\000\001x\005\000\005»\001¹\001º\007\000\001n\r\000\001x\005\000\001¸\003»\001¼\001¹\001º\007\000\001n\023\000\006¹\001º\007\000\001n\023\000\006½\001¢\007\000\001n\r\000\001x\005\000\006½\001¢\007\000\001n\023\000\001¾\001¿\001À\002¾\027\000\001²!\000\001²\006\000\004³\035\000\006Á\001«\033\000\006Â\001Ã\033\000\001Ä\001Å\001Æ\002Ä\001Ç\b\000\001n\r\000\001x\005\000\006È\001º\007\000\001n\023\000\006È\001º\007\000\001n\023\000\001Ä\001Å\001Æ\002Ä\001Ç\026\000\001x\005\000\005É\001È\001º\007\000\001n\r\000\001x\005\000\001È\004É\001È\001º\007\000\001n\031\000\001¢\007\000\001n\023\000\005Ê\t\000\001n\023\000\005¾\t\000\001n\023\000\001Ê\003¾\001Ë\t\000\001n\031\000\001«\033\000\006Ì\001Ã\033\000\006Í\001Î\025\000\001x\005\000\005Ï\001Ð\001Ñ\007\000\001n\r\000\001x\005\000\005Ò\001Ð\001Ñ\007\000\001n\r\000\001x\005\000\001Ï\003Ò\001Ó\001Ð\001Ñ\007\000\001n\023\000\006Ð\001Ñ\007\000\001n\023\000\006Ô\001º\007\000\001n\r\000\001x\005\000\006Ô\001º\007\000\001n!\000\001n\024\000\004Ê\t\000\001n\023\000\006Õ\001Ã\033\000\006Ö\001×\033\000\001Ø\001Ù\001Ú\002Ø\001Û\b\000\001n\r\000\001x\005\000\006Ü\001Ñ\007\000\001n\023\000\006Ü\001Ñ\007\000\001n\023\000\001Ø\001Ù\001Ú\002Ø\001Û\026\000\001x\005\000\005Ý\001Ü\001Ñ\007\000\001n\r\000\001x\005\000\001Ü\004Ý\001Ü\001Ñ\007\000\001n\031\000\001º\007\000\001n\031\000\001Ã\033\000\006Þ\001×\033\000\001ß\001à\001á\002ß\001â\001ã\025\000\001x\005\000\005ä\001å\001æ\007\000\001n\r\000\001x\005\000\005ç\001å\001æ\007\000\001n\r\000\001x\005\000\001ä\003ç\001è\001å\001æ\007\000\001n\023\000\006å\001æ\007\000\001n\023\000\006é\001Ñ\007\000\001n\r\000\001x\005\000\006é\001Ñ\007\000\001n\023\000\006ê\001×\025\000\001x\005\000\005ë\001ì\001í\025\000\001x\005\000\005î\001ì\001í\025\000\001x\005\000\001ë\003î\001ï\001ì\001í\033\000\006ì\001í\033\000\006ð\b\000\001n\r\000\001x\005\000\006ñ\001æ\007\000\001n\023\000\006ñ\001æ\007\000\001n\023\000\006ð\026\000\001x\005\000\005ò\001ñ\001æ\007\000\001n\r\000\001x\005\000\001ñ\004ò\001ñ\001æ\007\000\001n\031\000\001Ñ\007\000\001n\031\000\001×\025\000\001x\005\000\006ó\001í\033\000\006ó\001í\033\000\006ð\001Ê\025\000\001x\005\000\005ô\001ó\001í\025\000\001x\005\000\001ó\004ô\001ó\001í\033\000\006õ\b\000\001n\023\000\006ö\001æ\007\000\001n\r\000\001x\005\000\006ö\001æ\007\000\001n\023\000\006÷\001í\025\000\001x\005\000\006÷\001í\033\000\006ø\b\000\001n\031\000\001æ\007\000\001n\031\000\001í\033\000\006Ê\b\000\001n\t\000";
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;
  
  private static int[] zzUnpackTrans()
  {
    int[] result = new int[' '];
    int offset = 0;
    offset = zzUnpackTrans("\001\002\001\003\001\004\003\002\001\005\002\002\001\006\005\004\001\006\006\002\001\007\002\002\001\b\003\006\001\002\001\006\001\t\001\n\001\002#\000\002\003\001\000\001\013\001\000\001\f\002\r\007\003\005\000\001\016\003\000\004\003\001\016\001\003\004\000\001\003\001\017\001\000\001\020\001\000\001\f\002\021\001\022\005\017\001\022\002\000\001\023\002\000\001\024\003\000\004\022\001\024\001\022\005\000\001\025\005\000\b\025\t\000\004\025\001\000\001\025\004\000\001\003\001\022\001\026\001\027\001\030\001\031\002\r\001\032\005\022\001\032\005\000\001\016\003\000\004\032\001\016\001\032\005\000\001\033\005\000\b\033\t\000\004\033\001\000\001\033\004\000\001\003\001\022\001\026\001\027\001\030\001\031\002\r\001\032\005\022\001\032\005\000\001\016\003\000\001\032\001\034\002\032\001\016\001\032$\000\001\002\001\000\001\035\001\036\006\000\001\037\005\036\001\037\t\000\004\037\001\000\001\037\004\000\002 \006\000\007 \t\000\004 \001\000\001 \004\000\001!\001\"\006\000\001#\005\"\001#\t\000\004#\001\000\001#\005\000\001$\006\000\001\016\005$\001\016\t\000\004\016\001\000\001\016\004\000\001\003\001%\001\000\001\020\001\000\001\f\002\021\001\022\005%\001\022\002\000\001\023\002\000\001\024\003\000\004\022\001\024\001\022\004\000\001&\001'\006\000\001(\005'\001(\t\000\004(\001\000\001(\004\000\001)\001*\006\000\001+\005*\001+\t\000\004+\001\000\001+\004\000\001\003\001\022\001\000\001,\001\000\001\f\002\021\007\022\005\000\001\024\003\000\004\022\001\024\001\022\004\000\001-\001.\006\000\001/\005.\001/\t\000\004/\001\000\001/\f\000\0010\005\000\0010\t\000\0040\001\000\0010\004\000\001\035\001\036\006\000\0011\005\036\0011\t\000\0041\001\000\0011\f\000\0012\005\000\0012\t\000\0042\001\000\0012\004\000\002 \006\000\0013\005 \0013\t\000\0043\001\000\0013\004\000\001\003\001\022\001\026\001\013\001\030\001\031\002\r\001\032\005\022\001\032\005\000\001\016\003\000\004\032\001\016\001\032\004\000\001\003\001\022\001\026\001\013\001\030\001\031\002\r\001\032\005\022\001\032\005\000\001\016\003\000\001\032\0014\002\032\001\016\001\032\004\000\002\035\001\000\0015\001\000\001\f\0026\007\035\t\000\004\035\001\000\001\035\004\000\001\035\001\036\001\000\0017\001\000\001\f\0028\007\036\005\000\0019\003\000\004\036\0019\001\036\004\000\001\035\001\036\001\000\0015\001\000\001\f\0026\001\037\005\036\001\037\t\000\004\037\001\000\001\037\004\000\002 \001\000\001:\002\000\001:\001\000\007 \t\000\004 \001\000\001 \004\000\002!\001\000\0016\001\000\001\f\0026\007!\t\000\004!\001\000\001!\004\000\001!\001\"\001\000\0018\001\000\001\f\0028\007\"\005\000\0019\003\000\004\"\0019\001\"\004\000\001!\001\"\001\000\0016\001\000\001\f\0026\001#\005\"\001#\t\000\004#\001\000\001#\005\000\001$\001\000\0019\002\000\0029\007$\005\000\0019\003\000\004$\0019\001$\004\000\001\003\001\022\001\000\001\020\001\000\001\f\002\021\007\022\002\000\001\023\002\000\001\024\003\000\004\022\001\024\001\022\004\000\002&\001\000\001;\001\000\001\f\002\r\007&\005\000\001\016\003\000\004&\001\016\001&\004\000\001&\001'\001\000\001<\001\000\001\f\002\021\001=\005'\001=\002\000\001\023\002\000\001\024\003\000\004=\001\024\001=\004\000\001&\001=\001\000\001;\001\000\001\f\002\r\001(\005=\001(\005\000\001\016\003\000\004(\001\016\001(\004\000\002)\001\000\001\r\001\000\001\f\002\r\007)\005\000\001\016\003\000\004)\001\016\001)\004\000\001)\001*\001\000\001\021\001\000\001\f\002\021\007*\005\000\001\024\003\000\004*\001\024\001*\004\000\001)\001*\001\000\001\r\001\000\001\f\002\r\001+\005*\001+\005\000\001\016\003\000\004+\001\016\001+\004\000\001&\001=\006\000\001(\005=\001(\t\000\004(\001\000\001(\004\000\002-\001\000\001\016\002\000\002\016\007-\005\000\001\016\003\000\004-\001\016\001-\004\000\001-\001.\001\000\001\024\002\000\002\024\007.\005\000\001\024\003\000\004.\001\024\001.\004\000\001-\001.\001\000\001\016\002\000\002\016\001/\005.\001/\005\000\001\016\003\000\004/\001\016\001/\006\000\001\026\005\000\0010\005\000\0010\t\000\0040\001\000\0010\004\000\001\035\001\036\001\000\001>\001\000\001\f\0026\001\037\005\036\001\037\t\000\004\037\001\000\001\037\004\000\002 \001\000\001:\002\000\001:\001\000\0013\005 \0013\t\000\0043\001\000\0013\004\000\001\003\001\022\001\026\001\013\001\030\001\031\002\r\001\032\005\022\001\032\005\000\001\016\003\000\002\032\001?\001\032\001\016\001\032\004\000\002\035\006\000\007\035\t\000\004\035\001\000\001\035\004\000\002!\006\000\007!\t\000\004!\001\000\001!\004\000\002&\006\000\007&\t\000\004&\001\000\001&\004\000\002)\006\000\007)\t\000\004)\001\000\001)\004\000\002-\006\000\007-\t\000\004-\001\000\001-\004\000\002@\006\000\007@\t\000\004@\001\000\001@\004\000\001&\001=\001\000\001<\001\000\001\f\002\021\007=\005\000\001\024\003\000\004=\001\024\001=\004\000\002\035\006\000\001A\005\035\001A\t\000\004A\001\000\001A\004\000\001\003\001\022\001\026\001\013\001\030\001\031\002\r\001\032\005\022\001\032\001B\004\000\001\016\003\000\003\032\001C\001\016\001\032\004\000\002@\001\000\001:\002\000\001:\001\000\007@\t\000\004@\001\000\001@\004\000\002\035\001\000\001>\001\000\001\f\0026\007\035\t\000\004\035\001\000\001\035\030\000\001D\r\000\001\003\001\022\001\026\001\013\001\030\001\031\002\r\001\032\005\022\001\032\001B\004\000\001\016\003\000\004\032\001\016\001\032\030\000\001E\017\000\003F\001G\002F\007H\001I\001F\001J\001F\003\000\001K\001\000\004H\001F\007\000\003F\001G\tF\001I\001F\001J\001F\005\000\005F\r\000\007L\007\000\001K\001\000\004L\b\000\001F\001M\001F\001G\001N\001F\007H\001O\001F\001J\001F\001P\001Q\001R\002\000\004H\001F\007\000\003I\001G\tI\001\000\001I\001S\001I\005\000\005I\016\000\006T\034\000\006U\001V\025\000\001W\002\000\001X\001\000\007L\001Y\003\000\001P\001Q\001R\002\000\004L\b\000\003F\001G\002F\007H\001I\001F\001J\001F\005\000\004H\001F\007\000\003F\001G\001N\001F\007H\001I\001F\001J\001F\005\000\004H\001F\007\000\003I\001G\003I\005Z\001I\001\000\001I\001S\001I\005\000\005I\007\000\017P\001[\003P\001R\002\000\005P\b\000\016Q\001\\\001\000\001P\001Q\001R\002\000\004Q\b\000\017R\001]\003R\003\000\005R\016\000\006^\034\000\006F\034\000\006_\001`!\000\001a\032\000\007L\t\000\004L\f\000\001X\001\000\007L\t\000\004L\017\000\005b\026\000\003I\001G\003I\005c\001I\001\000\001I\001S\001I\001P\001Q\001R\002\000\005I\016\000\006d\034\000\006e\034\000\006f\034\000\006I\034\000\006g\001`\033\000\006h\001i\033\000\001j\001k\001l\002j\001m\b\000\001n\023\000\005o\005\000\001P\001Q\001R\016\000\003I\001G\003I\005p\001I\001\000\001I\001S\001I\001P\001Q\001R\002\000\005I\016\000\006P\034\000\006Q\034\000\006R\034\000\006q\001`\033\000\006r\001s\033\000\001t\001u\001v\002t\001w\b\000\001n\r\000\001x\005\000\005y\001z\001{\007\000\001n\r\000\001x\005\000\005|\001z\001{\007\000\001n\r\000\001x\005\000\001y\003|\001}\001z\001{\007\000\001n\023\000\006z\001{\007\000\001n\031\000\001Y\003\000\001P\001Q\001R\025\000\005~\005\000\001P\001Q\001R\016\000\003I\001G\003I\005\001I\001\000\001I\001S\001I\001P\001Q\001R\002\000\005I\024\000\001`\033\000\006\001s\033\000\006\001\025\000\001x\005\000\005\001\001\007\000\001n\r\000\001x\005\000\005\001\001\007\000\001n\r\000\001x\005\000\001\003\001\001\001\007\000\001n\023\000\006\001\007\000\001n\023\000\001\001\001\002\027\000\001x\005\000\006\001{\007\000\001n\023\000\006\001{\007\000\001n\023\000\001t\001u\001v\002t\001w\026\000\001x\005\000\005\001\001{\007\000\001n\r\000\001x\005\000\001\004\001\001{\007\000\001n\023\000\005\005\000\001P\001Q\001R\016\000\003I\001G\003I\005\001I\001\000\001I\001S\001I\001P\001Q\001R\002\000\005I\016\000\006\001s\033\000\006\001\033\000\001\001\001\002\001\b\000\001n\r\000\001x\005\000\006\001\007\000\001n\023\000\006\001\007\000\001n\023\000\001\001\001\002\001\026\000\001x\005\000\005\001\001\007\000\001n\r\000\001x\005\000\001\004\001\001\007\000\001n\r\000\001\005\000\005\027\000\001\005\000\005\027\000\001\005\000\001\003\001\035\000\006\001{\007\000\001n\r\000\001x\005\000\006\001{\007\000\001n\023\000\005\005\000\001P\001Q\001R\016\000\003I\001G\tI\001\000\001I\001S\001I\001P\001Q\001R\002\000\005I\024\000\001s\033\000\006\001\033\000\006\001\025\000\001x\005\000\005 \001¡\001¢\007\000\001n\r\000\001x\005\000\005£\001¡\001¢\007\000\001n\r\000\001x\005\000\001 \003£\001¤\001¡\001¢\007\000\001n\023\000\006¡\001¢\007\000\001n\023\000\006¥\001\007\000\001n\r\000\001x\005\000\006¥\001\007\000\001n\023\000\001¦\001§\001¨\002¦\027\000\001!\000\001\006\000\004#\000\001{\007\000\001n\035\000\001P\001Q\001R\025\000\006©\001\033\000\006ª\001«\033\000\001¬\001­\001®\002¬\001¯\b\000\001n\r\000\001x\005\000\006°\001¢\007\000\001n\023\000\006°\001¢\007\000\001n\023\000\001¬\001­\001®\002¬\001¯\026\000\001x\005\000\005±\001°\001¢\007\000\001n\r\000\001x\005\000\001°\004±\001°\001¢\007\000\001n\031\000\001\007\000\001n\r\000\001²\005\000\005³\027\000\001²\005\000\005¦\027\000\001²\005\000\001³\003¦\001´#\000\001\033\000\006µ\001«\033\000\006¶\001·\025\000\001x\005\000\005¸\001¹\001º\007\000\001n\r\000\001x\005\000\005»\001¹\001º\007\000\001n\r\000\001x\005\000\001¸\003»\001¼\001¹\001º\007\000\001n\023\000\006¹\001º\007\000\001n\023\000\006½\001¢\007\000\001n\r\000\001x\005\000\006½\001¢\007\000\001n\023\000\001¾\001¿\001À\002¾\027\000\001²!\000\001²\006\000\004³\035\000\006Á\001«\033\000\006Â\001Ã\033\000\001Ä\001Å\001Æ\002Ä\001Ç\b\000\001n\r\000\001x\005\000\006È\001º\007\000\001n\023\000\006È\001º\007\000\001n\023\000\001Ä\001Å\001Æ\002Ä\001Ç\026\000\001x\005\000\005É\001È\001º\007\000\001n\r\000\001x\005\000\001È\004É\001È\001º\007\000\001n\031\000\001¢\007\000\001n\023\000\005Ê\t\000\001n\023\000\005¾\t\000\001n\023\000\001Ê\003¾\001Ë\t\000\001n\031\000\001«\033\000\006Ì\001Ã\033\000\006Í\001Î\025\000\001x\005\000\005Ï\001Ð\001Ñ\007\000\001n\r\000\001x\005\000\005Ò\001Ð\001Ñ\007\000\001n\r\000\001x\005\000\001Ï\003Ò\001Ó\001Ð\001Ñ\007\000\001n\023\000\006Ð\001Ñ\007\000\001n\023\000\006Ô\001º\007\000\001n\r\000\001x\005\000\006Ô\001º\007\000\001n!\000\001n\024\000\004Ê\t\000\001n\023\000\006Õ\001Ã\033\000\006Ö\001×\033\000\001Ø\001Ù\001Ú\002Ø\001Û\b\000\001n\r\000\001x\005\000\006Ü\001Ñ\007\000\001n\023\000\006Ü\001Ñ\007\000\001n\023\000\001Ø\001Ù\001Ú\002Ø\001Û\026\000\001x\005\000\005Ý\001Ü\001Ñ\007\000\001n\r\000\001x\005\000\001Ü\004Ý\001Ü\001Ñ\007\000\001n\031\000\001º\007\000\001n\031\000\001Ã\033\000\006Þ\001×\033\000\001ß\001à\001á\002ß\001â\001ã\025\000\001x\005\000\005ä\001å\001æ\007\000\001n\r\000\001x\005\000\005ç\001å\001æ\007\000\001n\r\000\001x\005\000\001ä\003ç\001è\001å\001æ\007\000\001n\023\000\006å\001æ\007\000\001n\023\000\006é\001Ñ\007\000\001n\r\000\001x\005\000\006é\001Ñ\007\000\001n\023\000\006ê\001×\025\000\001x\005\000\005ë\001ì\001í\025\000\001x\005\000\005î\001ì\001í\025\000\001x\005\000\001ë\003î\001ï\001ì\001í\033\000\006ì\001í\033\000\006ð\b\000\001n\r\000\001x\005\000\006ñ\001æ\007\000\001n\023\000\006ñ\001æ\007\000\001n\023\000\006ð\026\000\001x\005\000\005ò\001ñ\001æ\007\000\001n\r\000\001x\005\000\001ñ\004ò\001ñ\001æ\007\000\001n\031\000\001Ñ\007\000\001n\031\000\001×\025\000\001x\005\000\006ó\001í\033\000\006ó\001í\033\000\006ð\001Ê\025\000\001x\005\000\005ô\001ó\001í\025\000\001x\005\000\001ó\004ô\001ó\001í\033\000\006õ\b\000\001n\023\000\006ö\001æ\007\000\001n\r\000\001x\005\000\006ö\001æ\007\000\001n\023\000\006÷\001í\025\000\001x\005\000\006÷\001í\033\000\006ø\b\000\001n\031\000\001æ\007\000\001n\031\000\001í\033\000\006Ê\b\000\001n\t\000", offset, result);
    return result;
  }
  
  private static int zzUnpackTrans(String packed, int offset, int[] result)
  {
    int i = 0;
    int j = offset;
    int l = packed.length();
    int count;
    for (; i < l; count > 0)
    {
      count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      result[(j++)] = value;count--;
    }
    return j;
  }
  
  private static final String[] ZZ_ERROR_MSG = { "Unkown internal scanner error", "Error: could not match input", "Error: pushback value was too large" };
  private static final int[] ZZ_ATTRIBUTE = zzUnpackAttribute();
  private static final String ZZ_ATTRIBUTE_PACKED_0 = "\001\000\001\t\006\001\001\t\001\001\004\000\001\001\002\000\001\001\001\t\001\000\001\001\004\000\006\001\002\000\001\001\001\000\b\001\001\000\t\001\001\000\001\001\003\000\007\001\001\000\001\001\004\000\001\001\003\000\001\001\003\000\003\001\007\000\001\001\007\000\002\001\n\000\003\001\r\000\002\001\r\000\002\001\r\000\001\001\\\000";
  private Reader zzReader;
  private int zzState;
  
  private static int[] zzUnpackAttribute()
  {
    int[] result = new int['ø'];
    int offset = 0;
    offset = zzUnpackAttribute("\001\000\001\t\006\001\001\t\001\001\004\000\001\001\002\000\001\001\001\t\001\000\001\001\004\000\006\001\002\000\001\001\001\000\b\001\001\000\t\001\001\000\001\001\003\000\007\001\001\000\001\001\004\000\001\001\003\000\001\001\003\000\003\001\007\000\001\001\007\000\002\001\n\000\003\001\r\000\002\001\r\000\002\001\r\000\001\001\\\000", offset, result);
    return result;
  }
  
  private static int zzUnpackAttribute(String packed, int offset, int[] result)
  {
    int i = 0;
    int j = offset;
    int l = packed.length();
    int count;
    for (; i < l; count > 0)
    {
      count = packed.charAt(i++);
      int value = packed.charAt(i++);
      result[(j++)] = value;count--;
    }
    return j;
  }
  
  private int zzLexicalState = 0;
  private char[] zzBuffer = new char['䀀'];
  private int zzMarkedPos;
  private int zzCurrentPos;
  private int zzStartRead;
  private int zzEndRead;
  private int yyline;
  private int yychar;
  private int yycolumn;
  private boolean zzAtBOL = true;
  private boolean zzAtEOF;
  private boolean zzEOFDone;
  public static final int ALPHANUM = 0;
  public static final int APOSTROPHE = 1;
  public static final int ACRONYM = 2;
  public static final int COMPANY = 3;
  public static final int EMAIL = 4;
  public static final int HOST = 5;
  public static final int NUM = 6;
  public static final int CJ = 7;
  public static final int URL = 8;
  public static final int HASHTAG = 9;
  public static final int MENTION = 10;
  public static final int PERCENTAGE = 11;
  /**
   * @deprecated
   */
  public static final int ACRONYM_DEP = 12;
  public static final String[] TOKEN_TYPES = TweetTokenizer.TOKEN_TYPES;
  
  public final int yychar()
  {
    return this.yychar;
  }
  
  final void getText(Token t)
  {
    t.copyBuffer(this.zzBuffer, this.zzStartRead, this.zzMarkedPos - this.zzStartRead);
  }
  
  final void getText(CharTermAttribute t)
  {
    t.copyBuffer(this.zzBuffer, this.zzStartRead, this.zzMarkedPos - this.zzStartRead);
  }
  
  TweetTokenizerImpl(Reader in)
  {
    this.zzReader = in;
  }
  
  TweetTokenizerImpl(InputStream in)
  {
    this(new InputStreamReader(in));
  }
  
  private static char[] zzUnpackCMap(String packed)
  {
    char[] map = new char[65536];
    int i = 0;
    int j = 0;
    int count;
    for (; i < 1304; count > 0)
    {
      count = packed.charAt(i++);
      char value = packed.charAt(i++);
      map[(j++)] = value;count--;
    }
    return map;
  }
  
  private boolean zzRefill()
    throws IOException
  {
    if (this.zzStartRead > 0)
    {
      System.arraycopy(this.zzBuffer, this.zzStartRead, this.zzBuffer, 0, this.zzEndRead - this.zzStartRead);
      
      this.zzEndRead -= this.zzStartRead;
      this.zzCurrentPos -= this.zzStartRead;
      this.zzMarkedPos -= this.zzStartRead;
      this.zzStartRead = 0;
    }
    if (this.zzCurrentPos >= this.zzBuffer.length)
    {
      char[] newBuffer = new char[this.zzCurrentPos * 2];
      System.arraycopy(this.zzBuffer, 0, newBuffer, 0, this.zzBuffer.length);
      this.zzBuffer = newBuffer;
    }
    int numRead = this.zzReader.read(this.zzBuffer, this.zzEndRead, this.zzBuffer.length - this.zzEndRead);
    if (numRead > 0)
    {
      this.zzEndRead += numRead;
      return false;
    }
    if (numRead == 0)
    {
      int c = this.zzReader.read();
      if (c == -1) {
        return true;
      }
      this.zzBuffer[(this.zzEndRead++)] = ((char)c);
      return false;
    }
    return true;
  }
  
  public final void yyclose()
    throws IOException
  {
    this.zzAtEOF = true;
    this.zzEndRead = this.zzStartRead;
    if (this.zzReader != null) {
      this.zzReader.close();
    }
  }
  
  public final void yyreset(Reader reader)
  {
    this.zzReader = reader;
    this.zzAtBOL = true;
    this.zzAtEOF = false;
    this.zzEOFDone = false;
    this.zzEndRead = (this.zzStartRead = 0);
    this.zzCurrentPos = (this.zzMarkedPos = 0);
    this.yyline = (this.yychar = this.yycolumn = 0);
    this.zzLexicalState = 0;
  }
  
  public final int yystate()
  {
    return this.zzLexicalState;
  }
  
  public final void yybegin(int newState)
  {
    this.zzLexicalState = newState;
  }
  
  public final String yytext()
  {
    return new String(this.zzBuffer, this.zzStartRead, this.zzMarkedPos - this.zzStartRead);
  }
  
  public final char yycharat(int pos)
  {
    return this.zzBuffer[(this.zzStartRead + pos)];
  }
  
  public final int yylength()
  {
    return this.zzMarkedPos - this.zzStartRead;
  }
  
  private void zzScanError(int errorCode)
  {
    String message;
    try
    {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e)
    {
      message = ZZ_ERROR_MSG[0];
    }
    throw new Error(message);
  }
  
  public void yypushback(int number)
  {
    if (number > yylength()) {
      zzScanError(2);
    }
    this.zzMarkedPos -= number;
  }
  
  public int getNextToken()
    throws IOException
  {
    int zzEndReadL = this.zzEndRead;
    char[] zzBufferL = this.zzBuffer;
    char[] zzCMapL = ZZ_CMAP;
    
    int[] zzTransL = ZZ_TRANS;
    int[] zzRowMapL = ZZ_ROWMAP;
    int[] zzAttrL = ZZ_ATTRIBUTE;
    for (;;)
    {
      int zzMarkedPosL = this.zzMarkedPos;
      
      this.yychar += zzMarkedPosL - this.zzStartRead;
      
      int zzAction = -1;
      
      int zzCurrentPosL = this.zzCurrentPos = this.zzStartRead = zzMarkedPosL;
      
      this.zzState = ZZ_LEXSTATE[this.zzLexicalState];
      int zzInput;
      for (;;)
      {
        int zzInput;
        if (zzCurrentPosL < zzEndReadL)
        {
          zzInput = zzBufferL[(zzCurrentPosL++)];
        }
        else
        {
          if (this.zzAtEOF)
          {
            int zzInput = -1;
            break;
          }
          this.zzCurrentPos = zzCurrentPosL;
          this.zzMarkedPos = zzMarkedPosL;
          boolean eof = zzRefill();
          
          zzCurrentPosL = this.zzCurrentPos;
          zzMarkedPosL = this.zzMarkedPos;
          zzBufferL = this.zzBuffer;
          zzEndReadL = this.zzEndRead;
          if (eof)
          {
            int zzInput = -1;
            break;
          }
          zzInput = zzBufferL[(zzCurrentPosL++)];
        }
        int zzNext = zzTransL[(zzRowMapL[this.zzState] + zzCMapL[zzInput])];
        if (zzNext == -1) {
          break;
        }
        this.zzState = zzNext;
        
        int zzAttributes = zzAttrL[this.zzState];
        if ((zzAttributes & 0x1) == 1)
        {
          zzAction = this.zzState;
          zzMarkedPosL = zzCurrentPosL;
          if ((zzAttributes & 0x8) == 8) {
            break;
          }
        }
      }
      this.zzMarkedPos = zzMarkedPosL;
      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction])
      {
      case 7: 
        return 5;
      case 15: 
        break;
      case 6: 
        return 9;
      case 16: 
        break;
      case 12: 
        return 2;
      case 17: 
        break;
      case 11: 
        return 12;
      case 18: 
        break;
      case 14: 
        return 8;
      case 19: 
        break;
      case 1: 
      case 20: 
        break;
      case 5: 
        return 10;
      case 21: 
        break;
      case 4: 
        return 11;
      case 22: 
        break;
      case 8: 
        return 6;
      case 23: 
        break;
      case 3: 
        return 7;
      case 24: 
        break;
      case 2: 
        return 0;
      case 25: 
        break;
      case 10: 
        return 3;
      case 26: 
        break;
      case 9: 
        return 1;
      case 27: 
        break;
      case 13: 
        return 4;
      case 28: 
        break;
      default: 
        if ((zzInput == -1) && (this.zzStartRead == this.zzCurrentPos))
        {
          this.zzAtEOF = true;
          return -1;
        }
        zzScanError(1);
      }
    }
  }
}
